local M = {}

function M.set(hl, colors)
    local shader = require("mellifluous.utils.shader")

    local pmenu = hl.get("Pmenu")
    local type = hl.get("Type")
    local func = hl.get("Function")
    local id = hl.get("Identifier")
    local struct = hl.get("Structure")
    local const = hl.get("Constant")
    local pmenu_sel = hl.get("PmenuSel")
    local dir = hl.get("Directory")
    local normal_float = hl.get("NormalFloat")
    local non_text = hl.get("NonText")

    hl.set("BlinkCmpMenu", { bg = pmenu.bg })
    hl.set("BlinkCmpMenuBorder", { bg = pmenu.bg })
    hl.set("BlinkCmpMenuSelection", { bg = pmenu_sel.bg, fg = pmenu_sel.fg })
    hl.set("BlinkCmpScrollBarThumb", { fg = hl.get("PmenuThumb").fg })
    hl.set("BlinkCmpScrollBarGutter", { fg = hl.get("PmenuSbar").fg })
    hl.set("BlinkCmpLabel", { fg = pmenu.fg })
    hl.set("BlinkCmpLabelDeprecated", { fg = pmenu.fg, style = { strikethrough = true } })
    hl.set("BlinkCmpLabelMatch", { fg = colors.fg })
    hl.set("BlinkCmpGhostText", { fg = non_text.fg })
    hl.set("BlinkCmpKind", { fg = type.fg })
    hl.set("BlinkCmpKindText", { fg = hl.get("String").fg })
    hl.set("BlinkCmpKindMethod", { fg = func.fg })
    hl.set("BlinkCmpKindFunction", { fg = func.fg })
    hl.set("BlinkCmpKindConstructor", { fg = func.fg })
    hl.set("BlinkCmpKindField", { fg = id.fg })
    hl.set("BlinkCmpKindVariable", { fg = id.fg })
    hl.set("BlinkCmpKindClass", { fg = type.fg })
    hl.set("BlinkCmpKindInterface", { fg = type.fg })
    hl.set("BlinkCmpKindModule", { fg = func.fg })
    hl.set("BlinkCmpKindProperty", { fg = id.fg })
    hl.set("BlinkCmpKindUnit", { fg = struct.fg })
    hl.set("BlinkCmpKindValue", { fg = const.fg })
    hl.set("BlinkCmpKindEnum", { fg = const.fg })
    hl.set("BlinkCmpKindKeyword", { fg = hl.get("Keyword").fg })
    hl.set("BlinkCmpKindSnippet", { fg = hl.get("Special").fg })
    hl.set("BlinkCmpKindColor", { fg = hl.get("Label").fg })
    hl.set("BlinkCmpKindFile", { fg = dir.fg })
    hl.set("BlinkCmpKindReference", { fg = hl.get("StorageClass").fg })
    hl.set("BlinkCmpKindFolder", { fg = dir.fg })
    hl.set("BlinkCmpKindEnumMember", { fg = const.fg })
    hl.set("BlinkCmpKindConstant", { fg = const.fg })
    hl.set("BlinkCmpKindStruct", { fg = struct.fg })
    hl.set("BlinkCmpKindEvent", { fg = hl.get("Repeat").fg })
    hl.set("BlinkCmpKindOperator", { fg = hl.get("Operator").fg })
    hl.set("BlinkCmpKindTypeParameter", { fg = type.fg })
    hl.set("BlinkCmpSource", { fg = non_text.fg })
    hl.set("BlinkCmpDoc", { bg = normal_float.bg })
    hl.set("BlinkCmpDocBorder", { link = "FloatBorder" })
    hl.set("BlinkCmpDocCursorLine", { bg = shader.replicate_shade(colors.bg, hl.get("CursorLine").bg, normal_float.bg) })
    hl.set("BlinkCmpSignatureHelp", { bg = normal_float.bg })
    hl.set("BlinkCmpSignatureHelpBorder", { bg = normal_float.bg })
    hl.set("BlinkCmpSignatureHelpActiveParameter", { bg = hl.get("LspSignatureActiveParameter").bg })
end

return M
